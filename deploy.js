const Web3 = require('web3');
const web3 = new Web3('https://ropsten.infura.io/y07GHxUyTgeN2mdfOonu');

async function deploy() {
  const contract = new web3.eth.Contract([{
    "constant": true,
    "inputs": [{"name": "", "type": "uint256"}],
    "name": "deals",
    "outputs": [{"name": "initiator", "type": "address"}, {
      "name": "receiver",
      "type": "address"
    }, {"name": "tokenAddress", "type": "address"}, {"name": "amount", "type": "uint256"}, {
      "name": "secretHash",
      "type": "bytes32"
    }, {"name": "paymentUntilBlock", "type": "uint256"}, {
      "name": "claimUntilBlock",
      "type": "uint256"
    }, {"name": "state", "type": "uint8"}],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  }, {
    "constant": false,
    "inputs": [{"name": "_dealId", "type": "uint256"}],
    "name": "makeErc20Payment",
    "outputs": [],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  }, {
    "constant": false,
    "inputs": [{"name": "_dealId", "type": "uint256"}],
    "name": "initiatorClaimsEthPayment",
    "outputs": [],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  }, {
    "constant": false,
    "inputs": [{"name": "_dealId", "type": "uint256"}],
    "name": "confirmDeal",
    "outputs": [],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  }, {
    "constant": false,
    "inputs": [{"name": "_dealId", "type": "uint256"}, {"name": "_secret", "type": "string"}],
    "name": "receiverClaimsErc20Payment",
    "outputs": [],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  }, {
    "constant": false,
    "inputs": [{"name": "_dealId", "type": "uint256"}],
    "name": "makeEthPayment",
    "outputs": [],
    "payable": true,
    "stateMutability": "payable",
    "type": "function"
  }, {
    "constant": false,
    "inputs": [{"name": "_dealId", "type": "uint256"}],
    "name": "initiatorClaimsErc20Payment",
    "outputs": [],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  }, {
    "constant": false,
    "inputs": [{"name": "_dealId", "type": "uint256"}, {"name": "_secret", "type": "string"}],
    "name": "receiverClaimsEthPayment",
    "outputs": [],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  }, {
    "constant": false,
    "inputs": [{"name": "_dealId", "type": "uint256"}, {
      "name": "_receiver",
      "type": "address"
    }, {"name": "_tokenAddress", "type": "address"}, {"name": "_amount", "type": "uint256"}, {
      "name": "_secretHash",
      "type": "bytes32"
    }],
    "name": "initDeal",
    "outputs": [],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  }, {"inputs": [], "payable": false, "stateMutability": "nonpayable", "type": "constructor"}]);

  const deploy = contract.deploy({
    data: '0x6060604052341561000f57600080fd5b610c088061001e6000396000f30060606040526004361061007f5763ffffffff60e060020a60003504166303988f848114610084578063092ca59b1461010057806348eb6905146101185780635cb442bb1461012e57806395c1361114610144578063cb163bd714610166578063daff64a514610171578063eba90cac14610187578063fefb5ff7146101a9575b600080fd5b341561008f57600080fd5b61009a6004356101d7565b604051600160a060020a03808a168252888116602083015287166040820152606081018690526080810185905260a0810184905260c0810183905260e081018260058111156100e557fe5b60ff1681526020019850505050505050505060405180910390f35b341561010b57600080fd5b61011660043561022b565b005b341561012357600080fd5b61011660043561049d565b341561013957600080fd5b610116600435610589565b341561014f57600080fd5b6101166004803590602480359081019101356105fe565b6101166004356107af565b341561017c57600080fd5b61011660043561086c565b341561019257600080fd5b6101166004803590602480359081019101356109b4565b34156101b457600080fd5b610116600435600160a060020a0360243581169060443516606435608435610b05565b60006020819052908152604090208054600182015460028301546003840154600485015460058601546006870154600790970154600160a060020a0396871697958716969094169492939192909160ff1688565b6000600260008381526020819052604090206007015460ff16600581111561024f57fe5b1480156102755750600082815260208190526040902060020154600160a060020a031615155b801561029b575060008281526020819052604090205433600160a060020a039081169116145b15156102a657600080fd5b5060008181526020819052604080822060078101805460ff1916600390811790915543600a0160068301556002820154910154600160a060020a03909116929091839163dd62ed3e9133913091516020015260405160e060020a63ffffffff8516028152600160a060020a03928316600482015291166024820152604401602060405180830381600087803b151561033d57600080fd5b6102c65a03f1151561034e57600080fd5b50505060405180519050101580156103ec57506000808381526020019081526020016000206003015481600160a060020a03166370a082313360006040516020015260405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401602060405180830381600087803b15156103ce57600080fd5b6102c65a03f115156103df57600080fd5b5050506040518051905010155b15156103f757600080fd5b80600160a060020a03166323b872dd33306000808781526020019081526020016000206003015460006040516020015260405160e060020a63ffffffff8616028152600160a060020a0393841660048201529190921660248201526044810191909152606401602060405180830381600087803b151561047657600080fd5b6102c65a03f1151561048757600080fd5b50505060405180519050151561049957fe5b5050565b600360008281526020819052604090206007015460ff1660058111156104bf57fe5b1480156104dd57506000818152602081905260409020600601544310155b80156105015750600081815260208190526040902060020154600160a060020a0316155b8015610527575060008181526020819052604090205433600160a060020a039081169116145b151561053257600080fd5b6000818152602081905260409081902060078101805460ff191660051790556003015433600160a060020a0316916108fc821502919051600060405180830381858888f19350505050151561058657600080fd5b50565b600160008281526020819052604090206007015460ff1660058111156105ab57fe5b1480156105d5575060008181526020819052604090206001015433600160a060020a039081169116145b15156105e057600080fd5b6000908152602081905260409020600701805460ff19166002179055565b6000600360008581526020819052604090206007015460ff16600581111561062257fe5b1480156106485750600084815260208190526040902060020154600160a060020a031615155b80156106a95750600283836000604051602001526040518083838082843782019150509250505060206040518083038160008661646e5a03f1151561068c57600080fd5b505060405180516000868152602081905260409020600401541490505b80156106c5575060008481526020819052604090206006015443105b80156106ee575060008481526020819052604090206001015433600160a060020a039081169116145b15156106f957600080fd5b5060008381526020819052604080822060078101805460ff191660041790556002810154600390910154600160a060020a0390911692839263a9059cbb9233929091516020015260405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b151561078357600080fd5b6102c65a03f1151561079457600080fd5b5050506040518051905015156107a957600080fd5b50505050565b600260008281526020819052604090206007015460ff1660058111156107d157fe5b1480156107f65750600081815260208190526040902060020154600160a060020a0316155b801561081c575060008181526020819052604090205433600160a060020a039081169116145b8015610838575060008181526020819052604090206003015434145b151561084357600080fd5b600090815260208190526040902060078101805460ff1916600317905543600a01600690910155565b6000600360008381526020819052604090206007015460ff16600581111561089057fe5b1480156108ae57506000828152602081905260409020600601544310155b80156108d35750600082815260208190526040902060020154600160a060020a031615155b80156108f9575060008281526020819052604090205433600160a060020a039081169116145b151561090457600080fd5b5060008181526020819052604080822060078101805460ff191660051790556002810154600390910154600160a060020a0390911692839263a9059cbb9233929091516020015260405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b151561098e57600080fd5b6102c65a03f1151561099f57600080fd5b50505060405180519050151561049957600080fd5b600360008481526020819052604090206007015460ff1660058111156109d657fe5b1480156109fb5750600083815260208190526040902060020154600160a060020a0316155b8015610a5c5750600282826000604051602001526040518083838082843782019150509250505060206040518083038160008661646e5a03f11515610a3f57600080fd5b505060405180516000858152602081905260409020600401541490505b8015610a78575060008381526020819052604090206006015443105b8015610aa1575060008381526020819052604090206001015433600160a060020a039081169116145b1515610aac57600080fd5b6000838152602081905260409081902060078101805460ff191660041790556003015433600160a060020a0316916108fc821502919051600060405180830381858888f193505050501515610b0057600080fd5b505050565b600160a060020a03841615801590610b1c57508015155b8015610b285750600082115b8015610b51575060008581526020819052604081206007015460ff166005811115610b4f57fe5b145b1515610b5c57600080fd5b600094855260208590526040909420805473ffffffffffffffffffffffffffffffffffffffff1990811633600160a060020a0390811691909117835560018084018054841697831697909717909655600283018054909216941693909317909255600382015560048101929092556007909101805460ff191690911790555600a165627a7a72305820d171b68f38f96c4439be76a369ba3d5692b0a4dfac5d84f845d8d561d62ecb6b0029',
  });

  const txInput = {
    to: null,
    amount: '0',
    gas: (await deploy.estimateGas()) + 300000,
    gasPrice: web3.utils.toWei('100', 'gwei'),
    data: deploy.encodeABI()
  };

  return new Promise((resolve, reject) => {
    web3.eth.accounts.signTransaction(txInput, '0x10865c7c1046fc14437b96a45e83c4e768d1875aa5409c2b2d5f65b5e5dbcb91').then(transaction => {
      web3.eth.sendSignedTransaction(transaction.rawTransaction)
        .on('transactionHash', transactionHash => {
          resolve(transactionHash);
        })
        .on('error', (error) => {
          reject(error);
        })
        .catch((error) => {
          reject(error);
        });
    });
  });
}

deploy().then((hash) => {
  console.log(`finished: ${ hash }`);
});